---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/12/25 15:49
---

local unpack = unpack

---@class Delegate
---@field New fun(handler:Handler, args:table) : Delegate
---@field id number
---@field handler Handler
---@field args table
---@field delete boolean
---@field execute fun()
local Delegate = class("Delegate")

local delegateList ---@type List | table<number, Handler>
local delegatePool ---@type List | table<number, Handler>
local totalNum = 0
local s_id = 0

function Delegate.Init()
    delegateList = List.New()
    delegatePool = List.New()
end

--从对象池中获取
---@param handler Handler
---@param args table
---@return Delegate
function Delegate.Get(handler, args)
    totalNum = totalNum + 1
    if delegatePool:Size() == 0 then
        local delegate = Delegate.New(handler, args)
        delegatePool:UnShift(delegate)
    end
    local delegate = delegatePool:Shift()
    delegate.handler = handler
    delegate.args = args
    delegate.delete = false
    delegateList:UnShift(delegate)
    return delegate
end

--从对象池中获取
---@param delegate Delegate
function Delegate.Store(delegate)
    if delegateList:Contain(delegate) then
        delegate.delete = true
        delegate.handler = nil
        delegate.args = nil
        delegateList:Remove(delegate)
        delegatePool:UnShift(delegate)
        --print(string.format("Delegate Pool [%s]: %s/%s - %s", delegate.id, delegateList:Size(),delegateList:Size() + delegatePool:Size(),totalNum))
    end
end

---@param handler Handler
---@param args table
function Delegate:Ctor(handler, args)
    s_id = s_id + 1
    self.id = s_id
    self.handler = handler
    self.args = args
    self.execute = function (param)
        if self.delete then
            logError("the [delegate " .. self.id .. "] has been deleten!")
            return
        end
        if self.args then
            if param ~= nil then
                self.handler:Execute(param, unpack(self.args));
            else
                self.handler:Execute(unpack(self.args));
            end
        else
            self.handler:Execute();
        end

        --Delegate.Store(self)
    end
end

return Delegate