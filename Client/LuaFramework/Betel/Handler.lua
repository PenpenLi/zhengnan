---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by zhengnan.
--- DateTime: 2019/5/20 15:58
---

local select = select
local unpack = unpack
local remove = table.remove

---@class Handler
---@field New fun(callback:fun(), caller:any) : Handler
---@field callback fun()
---@field caller any
---@field startTime any
---@field delay any
---@field args any[]
local Handler = class("Handler")

---@param callback fun()
---@param caller any
---@vararg any 参数
function Handler:Ctor(callback, caller, ...)
    if callback == nil then
        logError("error params! callback can not be nil!")
        return
    end
    self.callback = callback
    self.caller = caller
    self.startTime = nil
    self.delay = 0
    self.args = { ... }
    self.Delegate = handler(caller, callback)
end

function Handler:Execute(...)

    local callback = self.callback
    local caller = self.caller
    local new_args = { ... }
    local new_args_count = select("#", ...)
    local args = clone(self.args)
    local args_count = select("#", unpack(self.args))
    for i = 1, new_args_count do
        args[args_count + i] = new_args[i]
    end
    if callback ~= nil then
        if caller ~= nil then
            return callback(caller, unpack(args, 1, new_args_count + args_count))
        else
            return callback(unpack(args, 1, new_args_count + args_count))
        end
    end
end

return Handler